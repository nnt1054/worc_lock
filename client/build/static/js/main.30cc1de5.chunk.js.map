{"version":3,"sources":["Title.js","EditableTableRow.js","Timesheet.js","WorkClock.js","App.js","serviceWorker.js","index.js"],"names":["Title","props","Typography","component","variant","color","gutterBottom","children","EditableTableRow","ratingSelected","event","setState","rating","target","value","taskOnChange","e","tasks","date","Date","row","start","end","state","editing","valid","startEditing","bind","stopEditing","dateOnChange","startOnChange","endOnChange","updateRow","deleteRow","checkValidation","createTableRow","createEditableTableRow","this","rowid","update","getTime","delete","map","option","MenuItem","key","newDate","valueAsDate","startHour","getHours","startMin","getMinutes","endHour","endMin","newStart","newEnd","setHours","setMinutes","startString","slice","endString","ms","hr","Math","floor","min","classes","Fragment","IconButton","className","button","aria-label","onClick","duration","getDuration","startTime","formatTime","endTime","TableRow","TableCell","toLocaleDateString","align","actionButtons","formatTimeInput","TextField","id","type","defaultValue","toJSON","onChange","textField","inputProps","step","disabled","margin","autoWidth","select","ratingItems","placeholder","Component","API","Timesheet","timesheet","sendDeleteRequest","sendUpdateRequest","sendCreateRequest","refreshTimesheet","refreshInterval","setInterval","clearInterval","fetch","then","response","json","data","result","rows","console","log","encodeURIComponent","method","refresh","Grid","container","spacing","justify","alignItems","item","Table","size","tableClick","TableHead","TableBody","WorkClock","sendStartRequest","sendEndRequest","watchState","stopStopwatch","stateInterval","startDate","startStopwatch","stopwatchInterval","sec","xs","sm","md","lg","Button","fullWidth","App","timerState","interval","fixedHeightPaper","clsx","paper","fixedHeight","root","CssBaseline","AppBar","appBar","Toolbar","toolbar","noWrap","title","content","appBarSpacer","Container","maxWidth","Paper","withStyles","theme","display","flexGrow","height","overflow","mixins","paddingTop","paddingBottom","padding","flexDirection","icon","MuiSelect","undefined","paddingRight","unit","selectMenu","lineHeight","withTheme","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30cc1de5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { Component } from 'react';\n// import { withStyles } from '@material-ui/core/styles';\n\n\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n\nclass EditableTableRow extends Component {\n\n    constructor(props) {\n        super(props);\n\n        var date = new Date(this.props.row.start);\n        var start = new Date(this.props.row.start);\n        var end = new Date(this.props.row.end);\n\n        this.state = {\n            editing: this.props.editing,\n            valid: {\n                date: true,\n                start: true,\n                end: true,\n            },\n            date: date,\n            start: start,\n            end: end,\n            rating: this.props.row.rating,\n            tasks: this.props.row.tasks,\n        }\n\n        this.startEditing = this.startEditing.bind(this);\n        this.stopEditing = this.stopEditing.bind(this);\n        this.dateOnChange = this.dateOnChange.bind(this);\n        this.startOnChange = this.startOnChange.bind(this);\n        this.endOnChange = this.endOnChange.bind(this);\n        this.updateRow = this.updateRow.bind(this);\n        this.deleteRow = this.deleteRow.bind(this);\n        this.ratingSelected = this.ratingSelected.bind(this);\n        this.taskOnChange = this.taskOnChange.bind(this);\n        this.checkValidation = this.checkValidation.bind(this);\n        this.createTableRow = this.createTableRow.bind(this);\n        this.createEditableTableRow = this.createEditableTableRow.bind(this);\n    }\n\n    startEditing() {\n        this.setState({\n            editing: true,\n        })\n    }\n\n    stopEditing() {\n        this.setState({\n            editing: false,\n        })\n    }\n\n    updateRow() {\n        var rowid = this.props.row.rowid\n        var { start, end, rating, tasks } = this.state;\n        if (this.checkValidation()) {\n            this.props.update(rowid, start.getTime(), end.getTime(), rating, tasks)\n            this.stopEditing();\n        }\n    }\n\n    checkValidation() {\n        var { valid } = this.state;\n        return (valid.date & valid.start & valid.end);\n    }\n\n    deleteRow() {\n        this.props.delete(this.props.row.rowid)\n    }\n\n    ratingSelected = event => {\n        this.setState({\n            rating: event.target.value,\n        })\n    };\n\n    ratingItems() {\n        var items = ['', 10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\n        return (\n            items.map(option => {\n                if (!option) {\n                    return (\n                        <MenuItem key={0} value={''}>\n                            {''}\n                        </MenuItem>    \n                    )\n                }\n                return (\n                    <MenuItem key={option} value={option}>\n                        {option}\n                    </MenuItem>\n                )\n            })\n        )\n    }\n\n    taskOnChange = e => {\n        this.setState({\n            tasks: e.target.value,\n        })\n    };\n\n    dateOnChange(e) {\n        // var result = e.target.value;\n        var newDate = e.target.valueAsDate;\n        var valid = this.state.valid;\n        if (!newDate) {\n            valid.date = false;\n            this.setState({\n                valid: valid,\n            })\n            return;\n        } else {\n            valid.date = true;\n        }\n        var { start, end } = this.state;\n        var startHour = start.getHours(), startMin = start.getMinutes(),\n            endHour = end.getHours(), endMin = end.getMinutes();\n        var newStart = new Date(newDate.getTime()),\n            newEnd = new Date(newDate.getTime());\n        newStart.setHours(startHour);\n        newStart.setMinutes(startMin);\n        newEnd.setHours(endHour);\n        newEnd.setMinutes(endMin);\n        this.setState({\n            date: newDate,\n            start: start,\n            end: end,\n            valid: valid,\n        })\n    }\n\n    startOnChange(e) {\n        var startString = e.target.value;\n        var valid = this.state.valid;\n        if (!startString) {\n            valid.start = false;\n            this.setState({\n                valid: valid,\n            })\n            return;\n        } else {\n            valid.start = true;\n        }\n        var newStart = new Date(this.state.date.getTime());\n        newStart.setHours(startString.slice(0,2));\n        newStart.setMinutes(startString.slice(3,5));\n\n        var end = this.state.end;\n        while (end - newStart < 0) {\n            end = new Date(end.getTime() + 24 * 60 * 60 * 1000);\n        }\n        while (end - newStart > 24 * 60 * 60 * 1000) {\n            end = new Date(end.getTime() - 24 * 60 * 60 * 1000)\n        }\n        this.setState({\n            start: newStart,\n            end: end,\n            valid: valid,\n        })\n    }\n\n    endOnChange(e) {\n        var endString = e.target.value;\n        var valid = this.state.valid;\n        if (!endString) {\n            valid.end = false;\n            this.setState({\n                valid: valid,\n            })\n            return;\n        } else {\n            valid.end = true;\n        }\n        var newEnd = new Date(this.state.date.getTime());\n        newEnd.setHours(endString.slice(0,2));\n        newEnd.setMinutes(endString.slice(3,5));\n\n        var start = this.state.start;\n        while (newEnd - start < 0) {\n            newEnd =  new Date(newEnd.getTime() + 60 * 60 * 24 * 1000)\n        }\n        while (newEnd -start > 24 * 60 * 60 * 1000) {\n            newEnd =  new Date(newEnd.getTime() - 60 * 60 * 24 * 1000)\n        }\n        this.setState({\n            end: newEnd,\n            valid: valid,\n        })\n    }\n\n    getDuration(start, end) {\n        var ms = end - start\n        var hr = Math.floor(ms / (1000 * 60 * 60) % 60);\n        var min = Math.floor(ms / (1000 * 60) % 60);\n        if (hr) {\n            return hr + ' hours and ' + min + ' minutes'\n        } else {\n            return min + ' minutes'\n        }\n    }\n\n    formatTimeInput(date) {\n        var hr = date.getHours();\n        var min = date.getMinutes();\n        hr = (hr < 10) ? '0' + hr : hr;\n        min = (min < 10) ? '0' + min : min;\n        return hr + ':' + min;\n    }\n\n    formatTime(date) {\n        var hr = date.getHours();\n        var min = date.getMinutes();\n        min = (min < 10) ? '0' + min : min;\n        if (hr > 12) {\n            hr = hr % 12;\n            hr = (hr < 10) ? '0' + hr : hr;\n            return hr + ':' + min + ' PM';\n        } else {\n            return hr + ':' + min + ' AM';\n        }\n    }\n\n    actionButtons(editing, classes) {\n        if (editing) {\n            return (\n                <React.Fragment>\n                    <IconButton color={'primary'} className={classes.button} aria-label=\"delete\" onClick={this.updateRow}>\n                        <SaveIcon />\n                    </IconButton>\n                    <IconButton color={'secondary'} className={classes.button} aria-label=\"delete\" onClick={this.deleteRow}>\n                        <DeleteIcon />\n                    </IconButton>\n                    <IconButton color={'default'} className={classes.button} aria-label=\"delete\" onClick={this.stopEditing}>\n                        <CancelIcon />\n                    </IconButton>\n                </React.Fragment>\n            )\n        } else {\n            return (\n                <IconButton color={'primary'} className={classes.button} aria-label=\"delete\" onClick={this.startEditing}>\n                    <EditIcon />\n                </IconButton>\n            )\n        }\n    }\n\n\n    createTableRow(rowid, date, start, end, rating, tasks, classes) {\n        var duration = this.getDuration(start, end)\n        var startTime = this.formatTime(start);\n        var endTime = this.formatTime(end)\n\n        return (\n            <TableRow key={rowid}>\n                <TableCell>{date.toLocaleDateString()}</TableCell>\n                <TableCell>{startTime}</TableCell>\n                <TableCell>{endTime}</TableCell>\n                <TableCell>{duration}</TableCell>\n                <TableCell>{rating}</TableCell>\n                <TableCell>{tasks}</TableCell>\n                <TableCell align=\"right\">\n                    { this.actionButtons(false, this.props.classes) }\n                </TableCell>\n            </TableRow>\n        )\n    }\n\n    createEditableTableRow(rowid, date, start, end, rating, tasks, classes) {\n        var duration = this.getDuration(start, end)\n        var startTime = this.formatTimeInput(start);\n        var endTime = this.formatTimeInput(end)\n\n        return (\n            <TableRow key={rowid}>\n                <TableCell>\n                    <TextField\n                        id=\"date\"\n                        type=\"date\"\n                        defaultValue={start.toJSON().slice(0,10)}\n                        onChange={this.dateOnChange}\n                        className={classes.textField}\n                    />\n                </TableCell>\n                <TableCell>\n                {\n                    <TextField\n                        id=\"start\"\n                        type=\"time\"\n                        defaultValue={startTime}\n                        onChange={this.startOnChange}\n                        className={classes.textField}\n                        inputProps={{\n                            step: 60,\n                        }}\n                    />\n                }\n                </TableCell>\n                <TableCell>\n                {\n                    <TextField\n                        id=\"time\"\n                        type=\"time\"\n                        defaultValue={endTime}\n                        onChange={this.endOnChange}\n                        className={classes.textField}\n                        inputProps={{\n                            step: 60,\n                        }}\n                    />\n                }\n                </TableCell>\n                <TableCell>\n                    <TextField\n                        disabled\n                        id=\"standard-disabled\"\n                        value={duration}\n                        className={classes.textField}\n                        margin=\"normal\"\n                    />\n                </TableCell>\n                <TableCell>\n                    <TextField\n                        id=\"standard-number\"\n                        type=\"number\"\n                        value={this.state.rating}\n                        onChange={this.ratingSelected}\n                        className={classes.textField}\n                        margin=\"normal\"\n                        autoWidth\n                        select\n                    >\n                        {this.ratingItems()}\n                    </TextField>\n                </TableCell>\n                <TableCell>\n                    <TextField\n                        id=\"row-tasks\"\n                        className={classes.textField}\n                        placeholder=\"task1, task2, task3\"\n                        defaultValue={this.state.tasks}\n                        onChange={this.taskOnChange}\n                        margin=\"normal\"\n                    />\n                </TableCell>\n                <TableCell align=\"right\">\n                    { this.actionButtons(this.state.editing, this.props.classes) }\n                </TableCell>\n            </TableRow>\n        )\n    }\n\n    render() {\n\n        var { classes } = this.props;\n        var { editing, date, start, end, rating, tasks } = this.state;\n        var rowid = this.props.row.rowid;\n\n        return (\n            (() => {\n                if (editing) {\n                    return this.createEditableTableRow(rowid, date, start, end, rating, tasks, classes);\n                } else {\n                    return this.createTableRow(rowid, date, start, end, rating, tasks, classes);\n                }\n            })()\n        )\n    }   \n}\n\nexport default EditableTableRow;","import React, { Component } from 'react';\n// import { withStyles } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport AddAlarmIcon from '@material-ui/icons/AddAlarm'\n\nimport Title from './Title';\nimport EditableTableRow from './EditableTableRow';\n\n\nconst API = 'http://localhost:8000/api';\nconst TIMESHEET_QUERY = '/timesheet'\n\n\nclass Timesheet extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            timesheet: [],\n        }\n        \n        this.sendDeleteRequest = this.sendDeleteRequest.bind(this);\n        this.sendUpdateRequest = this.sendUpdateRequest.bind(this);\n        this.sendCreateRequest = this.sendCreateRequest.bind(this);\n        this.refreshTimesheet = this.refreshTimesheet.bind(this);\n    }\n\n    componentDidMount() {\n        this.refreshInterval = setInterval(this.refreshTimesheet, 500);\n        this.refreshTimesheet();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.refreshInterval);\n    }\n\n    refreshTimesheet() {\n        fetch(API + TIMESHEET_QUERY)\n            .then(response => response.json())\n            .then(data => {\n                if (data.result === 1) {\n                    this.setState({\n                        timesheet: data.rows,\n                    })\n                }\n            })\n    }\n\n    sendUpdateRequest(rowid, start, end, rating, tasks) {\n        console.log(start, end)\n        if ( !start || !end ) {\n            console.log('invalid!')\n            return;\n        }\n        fetch(API + TIMESHEET_QUERY + '/' + rowid + '?'\n            + 'start=' + encodeURIComponent(start) + '&'\n            + 'end=' + encodeURIComponent(end) + '&'\n            + 'rating=' + encodeURIComponent(rating) + '&'\n            + 'tasks=' + encodeURIComponent(tasks)\n        , {\n            method: 'post'\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.result === 1) {\n                    this.refreshTimesheet();\n                }\n            })\n    }\n\n    sendDeleteRequest(rowid) {\n        fetch(API + TIMESHEET_QUERY + '/' + rowid, {\n            method: 'delete',\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.result === 1) {\n                    this.refreshTimesheet();\n                }\n            })\n    }\n\n    sendCreateRequest() {\n        var start = new Date(), end = new Date();\n        fetch(API + TIMESHEET_QUERY + '?'\n            + 'start=' + encodeURIComponent(start) + '&'\n            + 'end=' + encodeURIComponent(end) + '&'\n            + 'rating=' + encodeURIComponent('') + '&'\n            + 'tasks=' + encodeURIComponent('')\n        , {\n            method: 'post'\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.result === 1) {\n                    this.refreshTimesheet();\n                }\n            })\n    }\n\n    refresh() {\n        this.setState({\n            refresh: !this.state.refresh,\n        })\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <React.Fragment>\n                <Grid container spacing={3} justify='space-between' alignItems='center'>\n                    <Grid item>\n                        <Title> Timesheet </Title>\n                    </Grid>\n                </Grid>\n\n                <Table size=\"large\" onClick={this.tableClick}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Date</TableCell>\n                            <TableCell>Start Time</TableCell>\n                            <TableCell>End Time</TableCell>\n                            <TableCell>Duration</TableCell>\n                            <TableCell>Rating</TableCell>\n                            <TableCell>Task(s)</TableCell>\n                            <TableCell align=\"right\">\n                                <IconButton color={'primary'} className={classes.button} aria-label=\"delete\" onClick={this.sendCreateRequest}>\n                                    <AddAlarmIcon />\n                                </IconButton>\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            this.state.timesheet.map(row => {\n                                return (\n                                    <EditableTableRow key={row.rowid} row={row} classes={classes} delete={this.sendDeleteRequest} update={this.sendUpdateRequest} />\n                                )\n                            })\n                        }\n                    </TableBody>\n                </Table>\n            </React.Fragment>\n        )\n    }   \n}\n\nexport default Timesheet;\n","import React, { Component } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\n\nconst API = 'http://localhost:8000/api';\nconst TIMER_QUERY = '/timer'\n\n\nclass WorkClock extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            state: 'IDLE',\n            start: new Date(),\n            duration: 0,\n        }\n        \n        this.sendStartRequest = this.sendStartRequest.bind(this);\n        this.sendEndRequest = this.sendEndRequest.bind(this);\n    }\n\n    componentDidMount() {\n        this.watchState();\n    }\n\n    componentWillUnmount() {\n        this.stopStopwatch();\n        clearInterval(this.stateInterval);\n    }\n\n\n    watchState() {\n        this.stateInterval = setInterval(() => {\n            fetch(API + TIMER_QUERY)\n                .then(response => response.json())\n                .then(data => {\n                    switch(data.state) {\n                        case 'IDLE':\n                            this.stopStopwatch();\n                            this.setState({\n                                state: data.state,\n                            })\n                            break;\n                        case 'WORKING':\n                            var startDate = new Date(data.start);\n                            if (this.state.start !== startDate) {\n                                this.setState({\n                                    state: data.state,\n                                    start: startDate,\n                                });\n                                this.startStopwatch();\n                            }\n                            break;\n                        default:\n                            console.log(data);\n                    }\n                })\n        }, 1000)\n    }\n\n    sendStartRequest() {\n        this.setState({\n            state: 'WORKING',\n            start: new Date(),\n        })\n        fetch(API + TIMER_QUERY + '?action=START', {\n            method: 'PUT'\n        })\n            .then(response => response.json())\n            .then(data => console.log(data))\n    }\n\n    sendEndRequest() {\n        this.setState({\n            state: 'IDLE',\n        })\n        fetch(API + TIMER_QUERY + '?action=END', {\n            method: 'PUT'\n        })\n            .then(response => response.json())\n            .then(data => {\n                // console.log(data);\n            })\n    }\n\n    startStopwatch() {\n        clearInterval(this.stopwatchInterval);\n        this.stopwatchInterval = setInterval(() => {\n            var current = new Date();\n            var duration = current - this.state.start;\n            this.setState({\n                duration: duration,\n            })\n        }, 100);\n    }\n\n\n    stopStopwatch() {\n        clearInterval(this.stopwatchInterval);\n    }\n\n    render() {\n        \n        return (\n            <React.Fragment>\n                <Typography component=\"h1\" variant=\"h1\" color=\"primary\" align=\"center\">\n                    {\n                        function(ms) {\n                            var hr = Math.floor(ms / (1000 * 60 * 60) % 60);\n                            var min = Math.floor(ms / (1000 * 60) % 60);\n                            var sec = Math.floor(ms / 1000 % 60);\n                            hr = (hr < 10) ? '0' + hr : hr;\n                            min = (min < 10) ? '0' + min : min;\n                            sec = (sec < 10) ? '0' + sec : sec;\n                            return hr + ':' + min + ':' + sec;\n                        }(this.state.duration)\n                    }\n                </Typography>\n                <Grid container spacing={3} justify='center' alignItems='center'>\n                    <Grid item xs={6} sm={4} md={2} lg={2}>\n                        <Button onClick={this.sendStartRequest} disabled={this.state.state === 'WORKING'} variant=\"outlined\" color='primary' fullWidth>\n                            Start Working\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6} sm={4} md={2} lg={2}>\n                        <Button onClick={this.sendEndRequest} disabled={this.state.state === 'IDLE'} variant=\"outlined\" color='secondary' fullWidth>\n                            End Session\n                        </Button>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\n// export default function WorkClock(props) {\n\n//   return (\n//     <React.Fragment>\n//         <Typography component=\"h1\" variant=\"h1\" color=\"primary\" align=\"center\">\n//             {props.children}\n//         </Typography>\n//         <Grid container spacing={3} justify='center' alignItems='center'>\n//             <Grid item xs={6} sm={4} md={2} lg={2}>\n//                 <Button variant=\"outlined\" className={classes.button} color='primary' fullWidth>\n//                     Start Working\n//                 </Button>\n//             </Grid>\n//             <Grid item xs={6} sm={4} md={2} lg={2}>\n//                 <Button variant=\"outlined\" className={classes.button} color='secondary' fullWidth>\n//                     End Session\n//                 </Button>\n//             </Grid>\n//         </Grid>\n//     </React.Fragment>\n//   );\n// }\n\n// WorkClock.propTypes = {\n//   children: PropTypes.node,\n// };\n\nexport default WorkClock;","import React, { Component } from 'react';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport Timesheet from './Timesheet';\nimport WorkClock from './WorkClock';\n\n\nconst useStyles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n    },\n    toolbar: {\n    },\n    title: {\n        flexGrow: 1,\n    },\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    appBarSpacer: {\n        ...theme.mixins.toolbar,\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n    button: {\n        // margin: theme.spacing(1),\n    },\n    icon: {\n        margin: theme.spacing(2),\n    },\n    textField: {\n        // height: '32px',\n    },\n      MuiSelect: {\n        // see https://github.com/mui-org/material-ui/issues/9826\n        select: {\n          padding: undefined,\n          paddingRight: theme.spacing.unit * 4,\n          height: undefined,\n        },\n        selectMenu: {\n          lineHeight: undefined,\n        },\n      },\n    \n});\n\n\nconst API = 'http://localhost:8000/api';\nconst TIMER_QUERY = '/timer'\n\nclass App extends Component {\n\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            timerState: 'hey :)',\n            startTime: new Date(),\n        };\n\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => fetch(API + TIMER_QUERY)\n            .then(response => response.json())\n            .then(data => {\n                if (data.state !== this.state.timerState) {\n                    this.setState({\n                        timerState: data.state,\n                    })\n                }\n            }), 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        const state = this.state.timerState;\n        const { classes } = this.props;\n        const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n        return (\n            <div className={ classes.root }>\n                <CssBaseline />\n                <AppBar className={classes.appBar}>\n                    <Toolbar className={classes.toolbar}>\n                        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                            ADD ME ON LINKEDIN\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer} />\n                    <Container maxWidth=\"lg\" className={classes.container}>\n                        <Grid container spacing={3}>\n                            {/* Work Clock */ }\n                            <Grid item xs={12}>\n                                <Paper className={classes.paper}>\n                                    <WorkClock />\n                                </Paper>\n                            </Grid>\n                            {/* Timer Series Chart*/}\n                            <Grid item xs={12} md={8} lg={9}>\n                                <Paper className={fixedHeightPaper}>\n                                    <span> { state } </span>\n                                </Paper>\n                            </Grid>\n                            {/* Statistics */}\n                            <Grid item xs={12} md={4} lg={3}>\n                                <Paper className={fixedHeightPaper}>\n                                    <span> { state } </span>\n                                </Paper>\n                            </Grid>\n                            {/* Timesheet */ }\n                            <Grid item xs={12}>\n                                <Paper className={classes.paper}>\n                                    <Timesheet classes={classes} />\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Container>\n                </main>\n            </div>\n        );\n    }\n}\n\n// export default App;\nexport default withStyles(useStyles, { withTheme: true })(App);\n    ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}