{"version":3,"sources":["Title.js","WorkClock.js","TimeSeriesChart.js","EditableTableRow.js","Timesheet.js","App.js","serviceWorker.js","index.js"],"names":["Title","props","Typography","component","variant","color","gutterBottom","children","API","WorkClock","state","start","Date","duration","sendStartRequest","bind","sendEndRequest","this","watchState","stopStopwatch","clearInterval","stateInterval","setInterval","fetch","then","response","json","data","setState","startDate","startStopwatch","console","log","method","stopwatchInterval","Fragment","align","ms","hr","Math","floor","min","sec","Grid","container","spacing","justify","alignItems","item","xs","sm","md","lg","Button","onClick","disabled","fullWidth","Component","TimeSeriesChart","margin","top","right","bottom","left","dataKey","yAxisId","domain","orientation","type","stroke","strokeWidth","activeDot","r","connectNulls","EditableTableRow","ratingSelected","event","rating","target","value","taskOnChange","e","tasks","date","row","setMinutes","setHours","end","editing","valid","startEditing","stopEditing","dateOnChange","startOnChange","endOnChange","updateRow","deleteRow","checkValidation","createTableRow","createEditableTableRow","rowid","update","getTime","delete","map","option","MenuItem","key","newDate","valueAsDate","startHour","getHours","startMin","getMinutes","endHour","endMin","newStart","newEnd","startString","slice","endString","classes","IconButton","className","button","aria-label","getDuration","startTime","formatTime","endTime","TableRow","TableCell","toLocaleDateString","actionButtons","formatTimeInput","TextField","id","defaultValue","toJSON","onChange","textField","inputProps","step","autoWidth","select","ratingItems","placeholder","Timesheet","timesheet","sendDeleteRequest","sendUpdateRequest","sendCreateRequest","refreshTimesheet","refreshInterval","result","rows","encodeURIComponent","refresh","Table","size","tableClick","TableHead","TableBody","App","timerState","weekHours","chartData","interval","hours","formatChartDate","today","i","dayKey","toDateString","ratings","length","reduce","a","b","round","push","day","reverse","fixedHeightPaper","clsx","paper","fixedHeight","root","CssBaseline","AppBar","appBar","Toolbar","toolbar","noWrap","title","content","appBarSpacer","Container","maxWidth","Paper","withStyles","theme","display","flexGrow","height","overflow","mixins","paddingTop","paddingBottom","padding","flexDirection","icon","MuiSelect","undefined","paddingRight","selectMenu","lineHeight","withTheme","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d1a95f5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { Component } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\n\nconst API = 'http://localhost:8000/api';\nconst TIMER_QUERY = '/timer'\n\n\nclass WorkClock extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            state: 'IDLE',\n            start: new Date(),\n            duration: 0,\n        }\n        \n        this.sendStartRequest = this.sendStartRequest.bind(this);\n        this.sendEndRequest = this.sendEndRequest.bind(this);\n    }\n\n    componentDidMount() {\n        this.watchState();\n    }\n\n    componentWillUnmount() {\n        this.stopStopwatch();\n        clearInterval(this.stateInterval);\n    }\n\n\n    watchState() {\n        this.stateInterval = setInterval(() => {\n            fetch(API + TIMER_QUERY)\n                .then(response => response.json())\n                .then(data => {\n                    switch(data.state) {\n                        case 'IDLE':\n                            this.stopStopwatch();\n                            this.setState({\n                                state: data.state,\n                            })\n                            break;\n                        case 'WORKING':\n                            var startDate = new Date(data.start);\n                            if (this.state.start !== startDate) {\n                                this.setState({\n                                    state: data.state,\n                                    start: startDate,\n                                });\n                                this.startStopwatch();\n                            }\n                            break;\n                        default:\n                            console.log(data);\n                    }\n                })\n        }, 1000)\n    }\n\n    sendStartRequest() {\n        this.setState({\n            state: 'WORKING',\n            start: new Date(),\n        })\n        fetch(API + TIMER_QUERY + '?action=START', {\n            method: 'PUT'\n        })\n            .then(response => response.json())\n            .then(data => console.log(data))\n    }\n\n    sendEndRequest() {\n        this.setState({\n            state: 'IDLE',\n        })\n        fetch(API + TIMER_QUERY + '?action=END', {\n            method: 'PUT'\n        })\n            .then(response => response.json())\n            .then(data => {\n                // console.log(data);\n            })\n    }\n\n    startStopwatch() {\n        clearInterval(this.stopwatchInterval);\n        this.stopwatchInterval = setInterval(() => {\n            var current = new Date();\n            var duration = current - this.state.start;\n            this.setState({\n                duration: duration,\n            })\n        }, 100);\n    }\n\n\n    stopStopwatch() {\n        clearInterval(this.stopwatchInterval);\n    }\n\n    render() {\n        \n        return (\n            <React.Fragment>\n                <Typography component=\"h1\" variant=\"h1\" color=\"primary\" align=\"center\">\n                    {\n                        function(ms) {\n                            var hr = Math.floor(ms / (1000 * 60 * 60) % 60);\n                            var min = Math.floor(ms / (1000 * 60) % 60);\n                            var sec = Math.floor(ms / 1000 % 60);\n                            hr = (hr < 10) ? '0' + hr : hr;\n                            min = (min < 10) ? '0' + min : min;\n                            sec = (sec < 10) ? '0' + sec : sec;\n                            return hr + ':' + min + ':' + sec;\n                        }(this.state.duration)\n                    }\n                </Typography>\n                <Grid container spacing={3} justify='center' alignItems='center'>\n                    <Grid item xs={6} sm={4} md={2} lg={2}>\n                        <Button onClick={this.sendStartRequest} disabled={this.state.state === 'WORKING'} variant=\"outlined\" color='primary' fullWidth>\n                            Start Working\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6} sm={4} md={2} lg={2}>\n                        <Button onClick={this.sendEndRequest} disabled={this.state.state === 'IDLE'} variant=\"outlined\" color='secondary' fullWidth>\n                            End Session\n                        </Button>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\n// export default function WorkClock(props) {\n\n//   return (\n//     <React.Fragment>\n//         <Typography component=\"h1\" variant=\"h1\" color=\"primary\" align=\"center\">\n//             {props.children}\n//         </Typography>\n//         <Grid container spacing={3} justify='center' alignItems='center'>\n//             <Grid item xs={6} sm={4} md={2} lg={2}>\n//                 <Button variant=\"outlined\" className={classes.button} color='primary' fullWidth>\n//                     Start Working\n//                 </Button>\n//             </Grid>\n//             <Grid item xs={6} sm={4} md={2} lg={2}>\n//                 <Button variant=\"outlined\" className={classes.button} color='secondary' fullWidth>\n//                     End Session\n//                 </Button>\n//             </Grid>\n//         </Grid>\n//     </React.Fragment>\n//   );\n// }\n\n// WorkClock.propTypes = {\n//   children: PropTypes.node,\n// };\n\nexport default WorkClock;","import React, { Component } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport Title from './Title';\r\n\r\nconst API = 'http://localhost:8000/api';\r\nconst TIMER_QUERY = '/timer'\r\n\r\n\r\nclass TimeSeriesChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Title> Summary </Title>\r\n                <ResponsiveContainer>\r\n                    <LineChart\r\n                        margin={{\r\n                            top: 32,\r\n                            right: 32,\r\n                            bottom: 0,\r\n                            left: 0,\r\n                        }}\r\n                        data={this.props.data}\r\n                    >\r\n                        <XAxis dataKey=\"day\" />\r\n                        <YAxis yAxisId=\"duration\" domain={[0, 'dataMax']} />\r\n                        <YAxis yAxisId=\"rating\" domain={[0, 10]} orientation=\"right\" />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line type=\"monotone\" yAxisId=\"duration\" dataKey=\"duration\" stroke=\"#8884d8\" strokeWidth={3} activeDot={{ r: 8 }} connectNulls />\r\n                        <Line type=\"monotone\" yAxisId=\"rating\" dataKey=\"rating\" stroke=\"red\" strokeWidth={3} activeDot={{ r: 8 }} connectNulls />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TimeSeriesChart;","import React, { Component } from 'react';\n// import { withStyles } from '@material-ui/core/styles';\n\n\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n\nclass EditableTableRow extends Component {\n\n    constructor(props) {\n        super(props);\n\n        var date = new Date(this.props.row.start);\n        date.setMinutes(0);\n        date.setHours(0);\n        var start = new Date(this.props.row.start);\n        var end = new Date(this.props.row.end);\n\n        this.state = {\n            editing: this.props.editing,\n            valid: {\n                date: true,\n                start: true,\n                end: true,\n            },\n            date: date,\n            start: start,\n            end: end,\n            rating: this.props.row.rating,\n            tasks: this.props.row.tasks,\n        }\n\n        this.startEditing = this.startEditing.bind(this);\n        this.stopEditing = this.stopEditing.bind(this);\n        this.dateOnChange = this.dateOnChange.bind(this);\n        this.startOnChange = this.startOnChange.bind(this);\n        this.endOnChange = this.endOnChange.bind(this);\n        this.updateRow = this.updateRow.bind(this);\n        this.deleteRow = this.deleteRow.bind(this);\n        this.ratingSelected = this.ratingSelected.bind(this);\n        this.taskOnChange = this.taskOnChange.bind(this);\n        this.checkValidation = this.checkValidation.bind(this);\n        this.createTableRow = this.createTableRow.bind(this);\n        this.createEditableTableRow = this.createEditableTableRow.bind(this);\n    }\n\n    startEditing() {\n        this.setState({\n            editing: true,\n        })\n    }\n\n    stopEditing() {\n        this.setState({\n            editing: false,\n        })\n    }\n\n    updateRow() {\n        var rowid = this.props.row.rowid\n        var { start, end, rating, tasks } = this.state;\n        if (this.checkValidation()) {\n            this.props.update(rowid, start.getTime(), end.getTime(), rating, tasks)\n            this.stopEditing();\n        }\n    }\n\n    checkValidation() {\n        var { valid } = this.state;\n        return (valid.date & valid.start & valid.end);\n    }\n\n    deleteRow() {\n        this.props.delete(this.props.row.rowid)\n    }\n\n    ratingSelected = event => {\n        this.setState({\n            rating: event.target.value,\n        })\n    };\n\n    ratingItems() {\n        var items = ['', 10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\n        return (\n            items.map(option => {\n                if (!option) {\n                    return (\n                        <MenuItem key={0} value={''}>\n                            {''}\n                        </MenuItem>    \n                    )\n                }\n                return (\n                    <MenuItem key={option} value={option}>\n                        {option}\n                    </MenuItem>\n                )\n            })\n        )\n    }\n\n    taskOnChange = e => {\n        this.setState({\n            tasks: e.target.value,\n        })\n    };\n\n    dateOnChange(e) {\n        var newDate = e.target.valueAsDate;\n        newDate = new Date(newDate.getTime() + 24 * 60 * 60 * 1000);\n        var valid = this.state.valid;\n        if (!newDate) {\n            valid.date = false;\n            this.setState({\n                valid: valid,\n            })\n            return;\n        } else {\n            valid.date = true;\n        }\n        var { start, end } = this.state;\n        var startHour = start.getHours(), startMin = start.getMinutes(),\n            endHour = end.getHours(), endMin = end.getMinutes();\n        var newStart = new Date(newDate.getTime()),\n            newEnd = new Date(newDate.getTime());\n        newStart.setHours(startHour);\n        newStart.setMinutes(startMin);\n        newEnd.setHours(endHour);\n        newEnd.setMinutes(endMin);\n        this.setState({\n            date: newDate,\n            start: newStart,\n            end: newEnd,\n            valid: valid,\n        })\n    }\n\n    startOnChange(e) {\n        var startString = e.target.value;\n        var valid = this.state.valid;\n        if (!startString) {\n            valid.start = false;\n            this.setState({\n                valid: valid,\n            })\n            return;\n        } else {\n            valid.start = true;\n        }\n        var newStart = new Date(this.state.date.getTime());\n        newStart.setHours(startString.slice(0,2));\n        newStart.setMinutes(startString.slice(3,5));\n\n        var end = this.state.end;\n        while (end - newStart < 0) {\n            end = new Date(end.getTime() + 24 * 60 * 60 * 1000);\n        }\n        while (end - newStart > 24 * 60 * 60 * 1000) {\n            end = new Date(end.getTime() - 24 * 60 * 60 * 1000)\n        }\n        this.setState({\n            start: newStart,\n            end: end,\n            valid: valid,\n        })\n    }\n\n    endOnChange(e) {\n        var endString = e.target.value;\n        var valid = this.state.valid;\n        if (!endString) {\n            valid.end = false;\n            this.setState({\n                valid: valid,\n            })\n            return;\n        } else {\n            valid.end = true;\n        }\n        var newEnd = new Date(this.state.date.getTime());\n        newEnd.setHours(endString.slice(0,2));\n        newEnd.setMinutes(endString.slice(3,5));\n\n        var start = this.state.start;\n        while (newEnd - start < 0) {\n            newEnd =  new Date(newEnd.getTime() + 60 * 60 * 24 * 1000)\n        }\n        while (newEnd -start > 24 * 60 * 60 * 1000) {\n            newEnd =  new Date(newEnd.getTime() - 60 * 60 * 24 * 1000)\n        }\n        this.setState({\n            end: newEnd,\n            valid: valid,\n        })\n    }\n\n    getDuration(start, end) {\n        var ms = end - start\n        var hr = Math.floor(ms / (1000 * 60 * 60) % 60);\n        var min = Math.floor(ms / (1000 * 60) % 60);\n        if (hr) {\n            return hr + ' hours and ' + min + ' minutes'\n        } else {\n            return min + ' minutes'\n        }\n    }\n\n    formatTimeInput(date) {\n        var hr = date.getHours();\n        var min = date.getMinutes();\n        hr = (hr < 10) ? '0' + hr : hr;\n        min = (min < 10) ? '0' + min : min;\n        return hr + ':' + min;\n    }\n\n    formatTime(date) {\n        var hr = date.getHours();\n        var min = date.getMinutes();\n        min = (min < 10) ? '0' + min : min;\n        if (hr > 12) {\n            hr = hr % 12;\n            hr = (hr < 10) ? '0' + hr : hr;\n            return hr + ':' + min + ' PM';\n        } else {\n            return hr + ':' + min + ' AM';\n        }\n    }\n\n    actionButtons(editing, classes) {\n        if (editing) {\n            return (\n                <React.Fragment>\n                    <IconButton color={'primary'} className={classes.button} aria-label=\"delete\" onClick={this.updateRow}>\n                        <SaveIcon />\n                    </IconButton>\n                    <IconButton color={'secondary'} className={classes.button} aria-label=\"delete\" onClick={this.deleteRow}>\n                        <DeleteIcon />\n                    </IconButton>\n                    <IconButton color={'default'} className={classes.button} aria-label=\"delete\" onClick={this.stopEditing}>\n                        <CancelIcon />\n                    </IconButton>\n                </React.Fragment>\n            )\n        } else {\n            return (\n                <IconButton color={'primary'} className={classes.button} aria-label=\"delete\" onClick={this.startEditing}>\n                    <EditIcon />\n                </IconButton>\n            )\n        }\n    }\n\n\n    createTableRow(rowid, date, start, end, rating, tasks, classes) {\n        var duration = this.getDuration(start, end)\n        var startTime = this.formatTime(start);\n        var endTime = this.formatTime(end)\n\n        return (\n            <TableRow key={rowid}>\n                <TableCell>{date.toLocaleDateString()}</TableCell>\n                <TableCell>{startTime}</TableCell>\n                <TableCell>{endTime}</TableCell>\n                <TableCell>{duration}</TableCell>\n                <TableCell>{rating}</TableCell>\n                <TableCell>{tasks}</TableCell>\n                <TableCell align=\"right\">\n                    { this.actionButtons(false, this.props.classes) }\n                </TableCell>\n            </TableRow>\n        )\n    }\n\n    createEditableTableRow(rowid, date, start, end, rating, tasks, classes) {\n        var duration = this.getDuration(start, end)\n        var startTime = this.formatTimeInput(start);\n        var endTime = this.formatTimeInput(end)\n\n        return (\n            <TableRow key={rowid}>\n                <TableCell>\n                    <TextField\n                        id=\"date\"\n                        type=\"date\"\n                        defaultValue={date.toJSON().slice(0,10)}\n                        onChange={this.dateOnChange}\n                        className={classes.textField}\n                    />\n                </TableCell>\n                <TableCell>\n                {\n                    <TextField\n                        id=\"start\"\n                        type=\"time\"\n                        defaultValue={startTime}\n                        onChange={this.startOnChange}\n                        className={classes.textField}\n                        inputProps={{\n                            step: 60,\n                        }}\n                    />\n                }\n                </TableCell>\n                <TableCell>\n                {\n                    <TextField\n                        id=\"time\"\n                        type=\"time\"\n                        defaultValue={endTime}\n                        onChange={this.endOnChange}\n                        className={classes.textField}\n                        inputProps={{\n                            step: 60,\n                        }}\n                    />\n                }\n                </TableCell>\n                <TableCell>\n                    <TextField\n                        disabled\n                        id=\"standard-disabled\"\n                        value={duration}\n                        className={classes.textField}\n                        margin=\"normal\"\n                    />\n                </TableCell>\n                <TableCell>\n                    <TextField\n                        id=\"standard-number\"\n                        type=\"number\"\n                        value={this.state.rating}\n                        onChange={this.ratingSelected}\n                        className={classes.textField}\n                        margin=\"normal\"\n                        autoWidth\n                        select\n                    >\n                        {this.ratingItems()}\n                    </TextField>\n                </TableCell>\n                <TableCell>\n                    <TextField\n                        id=\"row-tasks\"\n                        className={classes.textField}\n                        placeholder=\"task1, task2, task3\"\n                        defaultValue={this.state.tasks}\n                        onChange={this.taskOnChange}\n                        margin=\"normal\"\n                    />\n                </TableCell>\n                <TableCell align=\"right\">\n                    { this.actionButtons(this.state.editing, this.props.classes) }\n                </TableCell>\n            </TableRow>\n        )\n    }\n\n    render() {\n\n        var { classes } = this.props;\n        var { editing, date, start, end, rating, tasks } = this.state;\n        var rowid = this.props.row.rowid;\n\n        return (\n            (() => {\n                if (editing) {\n                    return this.createEditableTableRow(rowid, date, start, end, rating, tasks, classes);\n                } else {\n                    return this.createTableRow(rowid, date, start, end, rating, tasks, classes);\n                }\n            })()\n        )\n    }   \n}\n\nexport default EditableTableRow;","import React, { Component } from 'react';\n// import { withStyles } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport AddAlarmIcon from '@material-ui/icons/AddAlarm'\n\nimport Title from './Title';\nimport EditableTableRow from './EditableTableRow';\n\n\nconst API = 'http://localhost:8000/api';\nconst TIMESHEET_QUERY = '/timesheet'\n\n\nclass Timesheet extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            timesheet: [],\n        }\n        \n        this.sendDeleteRequest = this.sendDeleteRequest.bind(this);\n        this.sendUpdateRequest = this.sendUpdateRequest.bind(this);\n        this.sendCreateRequest = this.sendCreateRequest.bind(this);\n        this.refreshTimesheet = this.refreshTimesheet.bind(this);\n    }\n\n    componentDidMount() {\n        this.refreshInterval = setInterval(this.refreshTimesheet, 500);\n        this.refreshTimesheet();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.refreshInterval);\n    }\n\n    refreshTimesheet() {\n        fetch(API + TIMESHEET_QUERY)\n            .then(response => response.json())\n            .then(data => {\n                if (data.result === 1) {\n                    this.setState({\n                        timesheet: data.rows,\n                    })\n                }\n            })\n    }\n\n    sendUpdateRequest(rowid, start, end, rating, tasks) {\n        if ( !start || !end ) {\n            console.log('invalid!')\n            return;\n        }\n        fetch(API + TIMESHEET_QUERY + '/' + rowid + '?'\n            + 'start=' + encodeURIComponent(start) + '&'\n            + 'end=' + encodeURIComponent(end) + '&'\n            + 'rating=' + encodeURIComponent(rating) + '&'\n            + 'tasks=' + encodeURIComponent(tasks)\n        , {\n            method: 'post'\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.result === 1) {\n                    this.refreshTimesheet();\n                }\n            })\n    }\n\n    sendDeleteRequest(rowid) {\n        fetch(API + TIMESHEET_QUERY + '/' + rowid, {\n            method: 'delete',\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.result === 1) {\n                    this.refreshTimesheet();\n                }\n            })\n    }\n\n    sendCreateRequest() {\n        var start = new Date(), end = new Date();\n        fetch(API + TIMESHEET_QUERY + '?'\n            + 'start=' + encodeURIComponent(start) + '&'\n            + 'end=' + encodeURIComponent(end) + '&'\n            + 'rating=' + encodeURIComponent('') + '&'\n            + 'tasks=' + encodeURIComponent('')\n        , {\n            method: 'post'\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.result === 1) {\n                    this.refreshTimesheet();\n                }\n            })\n    }\n\n    refresh() {\n        this.setState({\n            refresh: !this.state.refresh,\n        })\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <React.Fragment>\n                <Grid container spacing={3} justify='space-between' alignItems='center'>\n                    <Grid item>\n                        <Title> Timesheet </Title>\n                    </Grid>\n                </Grid>\n\n                <Table size=\"medium\" onClick={this.tableClick}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Date</TableCell>\n                            <TableCell>Start Time</TableCell>\n                            <TableCell>End Time</TableCell>\n                            <TableCell>Duration</TableCell>\n                            <TableCell>Rating</TableCell>\n                            <TableCell>Task(s)</TableCell>\n                            <TableCell align=\"right\">\n                                <IconButton color={'primary'} className={classes.button} aria-label=\"delete\" onClick={this.sendCreateRequest}>\n                                    <AddAlarmIcon />\n                                </IconButton>\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            this.state.timesheet.map(row => {\n                                return (\n                                    <EditableTableRow key={row.rowid} row={row} classes={classes} delete={this.sendDeleteRequest} update={this.sendUpdateRequest} />\n                                )\n                            })\n                        }\n                    </TableBody>\n                </Table>\n            </React.Fragment>\n        )\n    }   \n}\n\nexport default Timesheet;\n","import React, { Component } from 'react';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport Title from './Title';\nimport WorkClock from './WorkClock';\nimport TimeSeriesChart from './TimeSeriesChart'\nimport Timesheet from './Timesheet';\n\nconst useStyles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n    },\n    toolbar: {\n    },\n    title: {\n        flexGrow: 1,\n    },\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    appBarSpacer: {\n        ...theme.mixins.toolbar,\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n    button: {\n        // margin: theme.spacing(1),\n    },\n    icon: {\n        margin: theme.spacing(2),\n    },\n    textField: {\n        // height: '32px',\n    },\n    MuiSelect: {\n    // see https://github.com/mui-org/material-ui/issues/9826\n        select: {\n            padding: undefined,\n            paddingRight: theme.spacing(4),\n            height: undefined,\n        },\n        selectMenu: {\n            lineHeight: undefined,\n        },\n    },\n    \n});\n\n\nconst API = 'http://localhost:8000/api';\nconst TIMER_QUERY = '/timer'\nconst STAT_QUERY = '/statistics'\n\nclass App extends Component {\n\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            timerState: 'haha',\n            weekHours: 0,\n            chartData: [],\n        };\n\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => fetch(API + TIMER_QUERY)\n            .then(response => response.json())\n            .then(data => {\n                if (data.state !== this.state.timerState) {\n                    this.setState({\n                        timerState: data.state,\n                    })\n                }\n            }), 1000);\n\n        fetch(API + STAT_QUERY)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    weekHours: data.hours,\n                    chartData: this.formatChartDate(data.data),\n                })\n            })\n    }\n\n    formatChartDate(data) {\n        var result = []\n        var today = new Date();\n        var dayDuration = 24 * 60 * 60 * 1000;\n        for (var i = 0; i < 7; i++) {\n            var day = new Date(today.getTime() - (dayDuration * i));\n            var dayKey = day.toDateString();\n            if (dayKey in data) {\n                var ratings = data[dayKey].ratings\n                if (ratings.length < 1) {\n                    var rating = null;\n                } else if (ratings.length == 1 ) {\n                    var rating = ratings[0]\n                } else {\n                    var sum = ratings.reduce(function(a, b) { return a + b; });\n                    var rating = sum / ratings.length;\n                }\n                var duration = data[dayKey].duration / (60 * 60 * 1000);\n                duration = Math.round(duration * 100) / 100;\n                result.push({\n                    day: dayKey,\n                    duration: duration,\n                    rating: rating,\n                })\n            } else {\n                result.push({\n                    day: dayKey,\n                    duration: 0,\n                    rating: null,\n                })\n            }\n        }\n\n        return result.reverse();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        const { classes } = this.props;\n        const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n        return (\n            <div className={ classes.root }>\n                <CssBaseline />\n                <AppBar className={classes.appBar}>\n                    <Toolbar className={classes.toolbar}>\n                        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                            Work Clock\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer} />\n                    <Container maxWidth=\"lg\" className={classes.container}>\n                        <Grid container spacing={3}>\n                            {/* Work Clock */ }\n                            <Grid item xs={12}>\n                                <Paper className={classes.paper}>\n                                    <WorkClock />\n                                </Paper>\n                            </Grid>\n                            {/* Time Series Chart*/}\n                            <Grid item xs={12} md={8} lg={9}>\n                                <Paper className={fixedHeightPaper}>\n                                    <TimeSeriesChart data={this.state.chartData}/>\n                                </Paper>\n                            </Grid>\n                            {/* Statistics */}\n                            <Grid item xs={12} md={4} lg={3}>\n                                <Paper className={fixedHeightPaper}>\n                                    <Typography component=\"h2\" variant=\"h2\" color=\"primary\" align=\"left\">\n                                        { Math.round(this.state.weekHours * 100) / 100 }\n                                    </Typography>\n                                    <Title> Hours Worked <br/> This Week </Title>\n                                </Paper>\n                            </Grid>\n                            {/* Timesheet */ }\n                            <Grid item xs={12}>\n                                <Paper className={classes.paper}>\n                                    <Timesheet classes={classes} />\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Container>\n                </main>\n            </div>\n        );\n    }\n}\n\n// export default App;\nexport default withStyles(useStyles, { withTheme: true })(App);\n    ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}