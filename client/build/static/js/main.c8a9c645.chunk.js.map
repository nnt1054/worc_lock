{"version":3,"sources":["Title.js","Timesheet.js","WorkClock.js","App.js","serviceWorker.js","index.js"],"names":["Title","props","Typography","component","variant","color","gutterBottom","children","Timesheet","console","log","this","data","Fragment","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","row","start","Date","end","duration","Math","floor","ms","hr","min","key","rowid","toLocaleDateString","toLocaleTimeString","Component","useStyles","makeStyles","theme","button","input","display","WorkClock","classes","Grid","container","spacing","justify","alignItems","item","xs","Button","className","fullWidth","API","App","state","timerState","timesheet","interval","setInterval","fetch","then","response","json","setState","result","rows","clearInterval","fixedHeightPaper","clsx","paper","fixedHeight","root","CssBaseline","AppBar","appBar","Toolbar","toolbar","noWrap","title","content","appBarSpacer","Container","maxWidth","Paper","md","lg","withStyles","flexGrow","height","overflow","mixins","paddingTop","paddingBottom","padding","flexDirection","withTheme","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c8a9c645.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { Component } from 'react';\n// import { withStyles } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\n\n// // Generate Order Data\n// function createData(id, date, name, shipTo, paymentMethod, amount) {\n//   return { id, date, name, shipTo, paymentMethod, amount };\n// }\n\n// const rows = [\n//   createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n//   createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n//   createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n//   createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n//   createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n// ];\n\n// const useStyles = makeStyles(theme => ({\n//   seeMore: {\n//     marginTop: theme.spacing(3),\n//   },\n// }));\n\nclass Timesheet extends Component {\n\n    render() {\n        console.log(this.props.data); \n\n\n        return (\n            <React.Fragment>\n                <Title> Timesheet </Title>\n                <Table size=\"medium\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Date</TableCell>\n                            <TableCell>Start Time</TableCell>\n                            <TableCell>End Time</TableCell>\n                            <TableCell>Duration</TableCell>\n                            <TableCell>Rating</TableCell>\n                            <TableCell align=\"right\">Task(s)</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            this.props.data.map(row => {\n                                var start = new Date(row.start);\n                                var end = new Date(row.end);\n                                var duration = end - start\n                                var hours = Math.floor(duration / (1000 * 60 * 60) % 60);\n                                var minutes = Math.floor(duration / (1000 * 60) % 60);\n                                var duration = (function(start, end) {\n                                    var ms = end - start\n                                    var hr = Math.floor(ms / (1000 * 60 * 60) % 60);\n                                    var min = Math.floor(ms / (1000 * 60) % 60);\n                                    if (hr) {\n                                        return hr + ' hours and ' + min + ' minutes'\n                                    } else {\n                                        return min + ' minutes'\n                                    }\n                                }(start, end));\n                                \n                                return (\n                                    <TableRow key={row.rowid}>\n                                    <TableCell>{start.toLocaleDateString()}</TableCell>\n                                    <TableCell>{start.toLocaleTimeString()}</TableCell>\n                                    <TableCell>{start.toLocaleTimeString()}</TableCell>\n                                    <TableCell>{duration}</TableCell>\n                                    <TableCell>{2}</TableCell>\n                                    <TableCell align=\"right\">worc_lock</TableCell>\n                                    </TableRow>\n                                )\n                            })\n                        }\n                    </TableBody>\n                </Table>\n            </React.Fragment>\n        )\n    }   \n\n}\n\n// export default function Orders() {\n//   const classes = useStyles();\n//   return (\n//     <React.Fragment>\n//       <Title>Recent Orders</Title>\n//       <Table size=\"small\">\n//         <TableHead>\n//           <TableRow>\n//             <TableCell>Date</TableCell>\n//             <TableCell>Name</TableCell>\n//             <TableCell>Ship To</TableCell>\n//             <TableCell>Payment Method</TableCell>\n//             <TableCell align=\"right\">Sale Amount</TableCell>\n//           </TableRow>\n//         </TableHead>\n//         <TableBody>\n//           {rows.map(row => (\n//             <TableRow key={row.id}>\n//               <TableCell>{row.date}</TableCell>\n//               <TableCell>{row.name}</TableCell>\n//               <TableCell>{row.shipTo}</TableCell>\n//               <TableCell>{row.paymentMethod}</TableCell>\n//               <TableCell align=\"right\">{row.amount}</TableCell>\n//             </TableRow>\n//           ))}\n//         </TableBody>\n//       </Table>\n//       <div className={classes.seeMore}>\n//         <Link color=\"primary\" href=\"javascript:;\">\n//           See more orders\n//         </Link>\n//       </div>\n//     </React.Fragment>\n//   );\n// }\n\nexport default Timesheet;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    // margin: theme.spacing(1),\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nexport default function WorkClock(props) {\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n        <Typography component=\"h1\" variant=\"h1\" color=\"primary\" align=\"center\">\n          {props.children}\n        </Typography>\n        <Grid container spacing={3} justify='center' alignItems='center'>\n            <Grid item xs={3}>\n                <Button variant=\"outlined\" className={classes.button} color='primary' fullWidth='true'>\n                    Start Working\n                </Button>\n            </Grid>\n            <Grid item xs={3}>\n                <Button variant=\"outlined\" className={classes.button} color='secondary' fullWidth='true'>\n                    End Session\n                </Button>\n            </Grid>\n        </Grid>\n    </React.Fragment>\n  );\n}\n\nWorkClock.propTypes = {\n  children: PropTypes.node,\n};","import React, { Component } from 'react';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport Timesheet from './Timesheet';\nimport WorkClock from './WorkClock';\n\n\nconst useStyles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n    },\n    toolbar: {\n    },\n    title: {\n        flexGrow: 1,\n    },\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    appBarSpacer: {\n        ...theme.mixins.toolbar,\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    }\n    \n});\n\n\nconst API = 'http://localhost:8000/api';\n// const DEFAULT_QUERY = '/timesheet/create?hey=1&jeff=2';\nconst TIMER_QUERY = '/timer'\nconst TIMESHEET_QUERY = '/timesheet'\n\nclass App extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            timerState: 'hey :)',\n            timesheet: [],\n        };\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => fetch(API + TIMER_QUERY)\n            .then(response => response.json())\n            .then(data => {\n                if (data.state != this.state.timerState) {\n                    this.setState({\n                        timerState: data.state,\n                    })   \n                }\n            }), 1000);\n        \n        fetch(API + TIMESHEET_QUERY)\n            .then(response => response.json())\n            .then(data => {\n                if (data.result === 1) {\n                    this.setState({\n                        timesheet: data.rows,\n                    })\n                }\n            })\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n\n    render() {\n        const state = this.state.timerState;\n        const { classes } = this.props;\n        const timesheetData = this.state.timesheet;\n        const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n        return (\n            <div className={ classes.root }>\n                <CssBaseline />\n                <AppBar className={classes.appBar}>\n                    <Toolbar className={classes.toolbar}>\n                        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                            ADD ME ON LINKEDIN\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer} />\n                    <Container maxWidth=\"lg\" className={classes.container}>\n                        <Grid container spacing={3}>\n                            {/* Work Clock */ }\n                            <Grid item xs={12}>\n                                <Paper className={classes.paper}>\n                                    <WorkClock> 00:00:00 </WorkClock>\n                                </Paper>\n                            </Grid>\n                            {/* Timer Series Chart*/}\n                            <Grid item xs={12} md={8} lg={9}>\n                                <Paper className={fixedHeightPaper}>\n                                    <span> { state } </span>\n                                </Paper>\n                            </Grid>\n                            {/* Statistics */}\n                            <Grid item xs={12} md={4} lg={3}>\n                                <Paper className={fixedHeightPaper}>\n                                    <span> { state } </span>\n                                </Paper>\n                            </Grid>\n                            {/* Timsheet */ }\n                            <Grid item xs={12}>\n                                <Paper className={classes.paper}>\n                                    <Timesheet data={this.state.timesheet} />\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Container>\n                </main>\n            </div>\n        );\n    }\n}\n\n// export default App;\nexport default withStyles(useStyles, { withTheme: true })(App);\n    ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}